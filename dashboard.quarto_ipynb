{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"안전한 야간운전을 위한 위험구역 시각화\"\n",
        "format: dashboard\n",
        "server: shiny\n",
        "---"
      ],
      "id": "e227797a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from shiny import App, ui, reactive, render\n",
        "import plotly.graph_objects as go\n",
        "import pandas as pd\n",
        "\n",
        "# ------------------------\n",
        "# 1. 데이터 로드\n",
        "# ------------------------\n",
        "df_lamp = pd.read_csv('가로등위험도최종데이터.csv')\n",
        "df_cctv = pd.read_csv('cctv최종데이터.csv')\n",
        "df_school = pd.read_csv('학교최종데이터.csv')\n",
        "df_kickrani = pd.read_excel('kickrani.xlsx', header=1)\n",
        "\n",
        "# ------------------------\n",
        "# 2. UI 정의\n",
        "# ------------------------\n",
        "app_ui = ui.page_fluid(\n",
        "    ui.h1(\"안전한 야간운전을 위한 위험구역 시각화\", style=\"text-align:center; margin-bottom:30px;\"),\n",
        "    \n",
        "    ui.layout_sidebar(\n",
        "        ui.panel_sidebar(\n",
        "            ui.h3(\"표시할 시설 선택\"),\n",
        "            ui.input_checkbox_group(\n",
        "                \"facility\",\n",
        "                \"시설\",\n",
        "                choices=[\"가로등\", \"CCTV\", \"학교\", \"킥라니\"],\n",
        "                selected=[\"가로등\", \"CCTV\", \"학교\", \"킥라니\"]\n",
        "            )\n",
        "        ),\n",
        "        ui.panel_main(\n",
        "            ui.output_plotly(\"map_plot\")\n",
        "        )\n",
        "    )\n",
        ")\n",
        "\n",
        "# ------------------------\n",
        "# 3. Server 정의\n",
        "# ------------------------\n",
        "def server(input, output, session):\n",
        "\n",
        "    @output\n",
        "    @render.plotly\n",
        "    def map_plot():\n",
        "        fig = go.Figure()\n",
        "        selected = input.facility()\n",
        "        \n",
        "        if \"가로등\" in selected:\n",
        "            fig.add_trace(go.Scattermapbox(\n",
        "                lat=df_lamp['위도'],\n",
        "                lon=df_lamp['경도'],\n",
        "                mode='markers',\n",
        "                marker=dict(size=7, color='yellow', opacity=0.5),\n",
        "                text=df_lamp['설치형태'] + '<br>위험도: ' + df_lamp['위험도(100점)'].astype(str),\n",
        "                name='가로등'\n",
        "            ))\n",
        "        \n",
        "        if \"CCTV\" in selected:\n",
        "            fig.add_trace(go.Scattermapbox(\n",
        "                lat=df_cctv['위도'],\n",
        "                lon=df_cctv['경도'],\n",
        "                mode='markers',\n",
        "                marker=dict(size=10, color='green', opacity=0.6),\n",
        "                name='CCTV'\n",
        "            ))\n",
        "        \n",
        "        if \"학교\" in selected:\n",
        "            fig.add_trace(go.Scattermapbox(\n",
        "                lat=df_school['lat'],\n",
        "                lon=df_school['lon'],\n",
        "                mode='markers',\n",
        "                marker=dict(size=10, color='purple', opacity=0.6),\n",
        "                text=df_school['구분'],\n",
        "                name='학교'\n",
        "            ))\n",
        "        \n",
        "        if \"킥라니\" in selected:\n",
        "            fig.add_trace(go.Scattermapbox(\n",
        "                lat=df_kickrani['위도'],\n",
        "                lon=df_kickrani['경도'],\n",
        "                mode='markers',\n",
        "                marker=dict(size=10, color='black', opacity=0.6),\n",
        "                text=df_kickrani['주차가능 대수'].astype(str),\n",
        "                name='킥라니'\n",
        "            ))\n",
        "\n",
        "        fig.update_layout(\n",
        "            mapbox_style=\"open-street-map\",\n",
        "            mapbox_zoom=12,\n",
        "            mapbox_center={\"lat\": df_lamp['위도'].mean(), \"lon\": df_lamp['경도'].mean()},\n",
        "            height=800,\n",
        "            margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0},\n",
        "            legend=dict(title=\"시설 종류\", orientation=\"h\")\n",
        "        )\n",
        "        return fig\n",
        "\n",
        "# ------------------------\n",
        "# 4. App 실행\n",
        "# ------------------------\n",
        "app = App(app_ui, server)"
      ],
      "id": "c6c04198",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\USER\\AppData\\Roaming\\Python\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}